Metadata-Version: 2.4
Name: stroke-risk-predictor
Version: 0.1.0
Summary: Stroke Risk Predictor
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: anyio==4.4.0
Requires-Dist: appnope==0.1.4
Requires-Dist: argon2-cffi-bindings==21.2.0
Requires-Dist: argon2-cffi==23.1.0
Requires-Dist: arrow==1.3.0
Requires-Dist: wheel==0.45.1
Requires-Dist: asttokens==2.4.1
Requires-Dist: async-lru==2.0.4
Requires-Dist: attrs==23.2.0
Requires-Dist: babel==2.15.0
Requires-Dist: bayesian-optimization==1.5.0
Requires-Dist: beautifulsoup4==4.12.3
Requires-Dist: bleach==6.1.0
Requires-Dist: blinker==1.8.2
Requires-Dist: catboost==1.2.5
Requires-Dist: certifi==2024.7.4
Requires-Dist: cffi==1.16.0
Requires-Dist: charset-normalizer==3.3.2
Requires-Dist: click==8.1.7
Requires-Dist: cloudpickle==3.0.0
Requires-Dist: colorama==0.4.6
Requires-Dist: comm==0.2.2
Requires-Dist: contourpy==1.2.1
Requires-Dist: cycler==0.12.1
Requires-Dist: debugpy==1.8.1
Requires-Dist: decorator==5.1.1
Requires-Dist: defusedxml==0.7.1
Requires-Dist: executing==2.0.1
Requires-Dist: fastjsonschema==2.20.0
Requires-Dist: flask==3.0.3
Requires-Dist: fonttools==4.53.0
Requires-Dist: fqdn==1.5.1
Requires-Dist: graphviz==0.20.3
Requires-Dist: h11==0.14.0
Requires-Dist: httpcore==1.0.5
Requires-Dist: httpx==0.27.0
Requires-Dist: idna==3.7
Requires-Dist: imbalanced-learn==0.12.3
Requires-Dist: imblearn==0.0
Requires-Dist: iniconfig==2.0.0
Requires-Dist: ipykernel==6.29.4
Requires-Dist: isoduration==20.11.0
Requires-Dist: itsdangerous==2.2.0
Requires-Dist: jedi==0.19.1
Requires-Dist: jinja2==3.1.6
Requires-Dist: joblib==1.4.2
Requires-Dist: json5==0.9.25
Requires-Dist: jsonpointer==3.0.0
Requires-Dist: jsonschema==4.22.0
Requires-Dist: jsonschema-specifications==2023.12.1
Requires-Dist: jupyter-events==0.10.0
Requires-Dist: jupyter-lsp==2.2.5
Requires-Dist: jupyter-client==8.6.2
Requires-Dist: jupyter-core==5.7.2
Requires-Dist: jupyter-server==2.14.1
Requires-Dist: jupyter-server-terminals==0.5.3
Requires-Dist: jupyterlab==4.2.5
Requires-Dist: jupyterlab-pygments==0.3.0
Requires-Dist: jupyterlab-server==2.27.2
Requires-Dist: kaleido==0.2.1
Requires-Dist: kiwisolver==1.4.5
Requires-Dist: lightgbm==4.6.0
Requires-Dist: llvmlite==0.43.0
Requires-Dist: markupsafe==2.1.5
Requires-Dist: matplotlib==3.9.0
Requires-Dist: matplotlib-inline==0.1.7
Requires-Dist: mistune==3.0.2
Requires-Dist: nbclient==0.10.0
Requires-Dist: nbconvert==7.16.4
Requires-Dist: nbformat==5.10.4
Requires-Dist: nest-asyncio==1.6.0
Requires-Dist: notebook==7.2.1
Requires-Dist: notebook-shim==0.2.4
Requires-Dist: numba==0.60.0
Requires-Dist: numpy==1.26.4
Requires-Dist: overrides==7.7.0
Requires-Dist: packaging==24.1
Requires-Dist: pandas==2.2.2
Requires-Dist: pandas-flavor==0.6.0
Requires-Dist: pandocfilters==1.5.1
Requires-Dist: parso==0.8.4
Requires-Dist: patsy==0.5.6
Requires-Dist: pexpect==4.9.0
Requires-Dist: pillow==10.3.0
Requires-Dist: pingouin==0.5.4
Requires-Dist: platformdirs==4.2.2
Requires-Dist: plotly==5.22.0
Requires-Dist: pluggy==1.5.0
Requires-Dist: prometheus-client==0.20.0
Requires-Dist: prompt-toolkit==3.0.47
Requires-Dist: psutil==6.0.0
Requires-Dist: ptyprocess==0.7.0
Requires-Dist: pure-eval==0.2.2
Requires-Dist: pyaml==24.4.0
Requires-Dist: pycparser==2.22
Requires-Dist: pygments==2.18.0
Requires-Dist: pyparsing==3.1.2
Requires-Dist: pytest==8.2.2
Requires-Dist: pytest-flask==1.3.0
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: python-json-logger==2.0.7
Requires-Dist: pytz==2024.1
Requires-Dist: pyyaml==6.0.1
Requires-Dist: pyzmq==26.0.3
Requires-Dist: referencing==0.35.1
Requires-Dist: requests==2.32.3
Requires-Dist: rfc3339-validator==0.1.4
Requires-Dist: rfc3986-validator==0.1.1
Requires-Dist: rpds-py==0.18.1
Requires-Dist: scikit-learn==1.5.0
Requires-Dist: scikit-optimize==0.10.2
Requires-Dist: scipy==1.13.1
Requires-Dist: seaborn==0.13.2
Requires-Dist: send2trash==1.8.3
Requires-Dist: setuptools==70.1.0
Requires-Dist: shap==0.46.0
Requires-Dist: six==1.16.0
Requires-Dist: slicer==0.0.8
Requires-Dist: sniffio==1.3.1
Requires-Dist: soupsieve==2.5
Requires-Dist: stack-data==0.6.3
Requires-Dist: statsmodels==0.14.2
Requires-Dist: tabulate==0.9.0
Requires-Dist: tenacity==8.4.1
Requires-Dist: terminado==0.18.1
Requires-Dist: threadpoolctl==3.5.0
Requires-Dist: tinycss2==1.3.0
Requires-Dist: tornado==6.5
Requires-Dist: tqdm==4.66.4
Requires-Dist: traitlets==5.14.3
Requires-Dist: types-python-dateutil==2.9.0.20240316
Requires-Dist: tzdata==2024.1
Requires-Dist: uri-template==1.3.0
Requires-Dist: urllib3==2.2.2
Requires-Dist: wcwidth==0.2.13
Requires-Dist: webcolors==24.6.0
Requires-Dist: webencodings==0.5.1
Requires-Dist: websocket-client==1.8.0
Requires-Dist: werkzeug==3.0.6
Requires-Dist: xarray==2024.6.0
Requires-Dist: xgboost==2.1.0
Requires-Dist: gunicorn==23.0.0
Requires-Dist: exceptiongroup==1.3.0
Requires-Dist: importlib-metadata==8.7.0
Requires-Dist: importlib-resources==6.5.2
Requires-Dist: ipython==8.18.1
Requires-Dist: pip
Requires-Dist: tomli==2.2.1
Requires-Dist: typing-extensions==4.13.2
Requires-Dist: zipp==3.21.0
Dynamic: license-file

# Stroke Risk Predictor

## Table of Contents

- [Overview](#overview)
- [Interface](#interface)
- [Features](#features)
- [Model Details](#model-details)
- [Prerequisites](#prerequisites)
- [Installation](#installation)
  - [Using uv (Recommended)](#using-uv-recommended)
  - [Using pip (Alternative)](#using-pip-alternative)
- [Development Setup](#development-setup)
  - [Environment Configuration](#environment-configuration)
- [Local Execution](#local-execution)
- [Deployment](#deployment)
- [Testing](#testing)
- [License](#license)

## Overview

Machine learning-based web application designed to assess stroke risk based on health and lifestyle factors. The system processes patient data through a CatBoost model to provide risk assessments, helping healthcare professionals identify potential stroke risks early for timely intervention.

## Interface

![Web App Interface](images/web_app.png)

## Features

- Comprehensive health data analysis
- Advanced feature engineering implementation
- Multiple model evaluation framework
- High-recall optimization
- Flask-based web interface
- Google Cloud Platform deployment
- Automated testing suite
- Containerized deployment

## Model Details

Current implemented models evaluated:
1. Logistic Regression
2. XGBoost
3. CatBoost (selected as final model)

## Prerequisites

- Python 3.9+ (check `.python-version` file for the current required version)
- Docker
- Google Cloud SDK
- Flask
- scikit-learn
- CatBoost

## Installation

### Using uv (Recommended)

1. Install uv:
   ```bash
   # On Unix/macOS
   curl -LsSf https://astral.sh/uv/install.sh | sh

   # On Windows (PowerShell)
   irm https://astral.sh/uv/install.ps1 | iex
   ```

2. Clone the repository:
   ```bash
   git clone https://github.com/vytautas-bunevicius/stroke-risk-predictor.git
   cd stroke-risk-predictor
   ```

3. Create and activate virtual environment:
   ```bash
   uv venv
   source .venv/bin/activate  # On Unix/macOS
   # or
   .venv\Scripts\activate  # On Windows
   ```

4. Install dependencies:
   ```bash
   uv pip install -r requirements.txt
   ```

### Using pip (Alternative)

1. Clone the repository:
   ```bash
   git clone https://github.com/vytautas-bunevicius/stroke-risk-predictor.git
   cd stroke-risk-predictor
   ```

2. Create and activate virtual environment:
   ```bash
   python3 -m venv venv
   source venv/bin/activate  # On Unix/macOS
   # or
   venv\Scripts\activate  # On Windows
   ```

3. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

## Development Setup

### Environment Configuration

1. Create `.env` file in project root:
   ```env
   FLASK_ENV=development
   MODEL_PATH=models/catboost_model.pkl
   PORT=5000
   ```

2. Configure Google Cloud services:
   - App Engine
   - Cloud Storage (for model storage)
   - Secret Manager

## Local Execution

Run the application locally:
```bash
python src/app.py
```

Visit `http://localhost:5000` in your browser.

## Deployment

The application is deployed on Google Cloud Platform App Engine:

1. Configure deployment:
   ```bash
   gcloud config set project your-project-id
   ```

2. Deploy:
   ```bash
   gcloud app deploy
   ```

## Testing

Run the test suite:
```bash
python -m pytest tests/
```

## License

This project is released under the [Unlicense](https://unlicense.org/). This means you can copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.

See the [UNLICENSE](UNLICENSE) file for more details.
